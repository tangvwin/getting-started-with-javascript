/** 
目的：把words-from-the-heart项目中的jason文件名，扫描一下，再写入到一个txt文件中。
初步思考：
1. 先获取words-from-the-heart项目的路径，进入到jason文件夹里面。
2. 扫描文件，然后把jason文件名录下来(需要做判定，是否是jason文件)。
3. 再生成一个txt文件，然后把录下来的jason文件名写进去。

**/
// 引入fs模块
var fs = require('fs');

// 获取需要浏览的jason文件夹的路径
var scanPathString = '../../../words-from-the-heart'; // 有一个问题，就是这是一个相对路径，如果项目的文件夹不是这个目录的话，就获取不到路径了。

// 浏览目标文件夹内容,返回一个数组
var outContent = fs.readdirSync(scanPathString);

// 定义一个要写入到文件夹的数组writeContent;
// 筛选outContent的内容,把不含有.json的文件从数组中剔除出去，并加入到要写入的内容数组writeContent。
var writeContent = [];
for (var i = 0; i < outContent.length; i++) {
	if (outContent[i].indexOf('.json') > -1) {// 判定outContent的元素是否包含有'.json'字符串，如果没有就说明不是.json文件。
		outContent[i] = '(' + outContent[i] + ')'; // 百度和google了好久，都没有找到在txt里面，进行分段的符号，就加了一个括号，好辨认一些。
		writeContent.push(outContent[i]); // 在writeContent里面加入筛选后确定是json文件的元素。
	}
}

// 开始生成目标文件，并写入筛选好的内容
// 定义要写入的文件路径
var writFilePath = './write_file_name.txt';

// 调用fs的writeFileSync函数来写入文件
fs.writeFileSync(writFilePath,writeContent);

/*
// 感想
这可能是我第一次真正写代码，从设计到撰写。
刚拿到题目的时候，流汗……(⊙﹏⊙)b。
幸好还是之后老师补了节函数课，又翻了几遍同学的作业，晕眩之后，心里面稍定。
于是先理理思路，先把流程想清楚了。
但对怎么用函数还是不懂。

后来想起来老师让读nodejs api里面的东西，就赶快去网上找了，去读。
然而看到前几行：
conset fs = requre('fs')……以及后面的 throw err。
诸如：冒泡，抛出……
我的天……
讲得什么黑话，每个词都见过，但就是不知道说的啥。
一头雾水。

放弃，心塞。
就去看了老师第6节的示例代码，然而，还是老师写的代码比较容易懂，比心。
实验了一遍，迅速搞懂了fs怎么用。
但不甘心读不懂nodejs api 里面的文档，弄懂了老师的代码后，
又对照着去读nodejs api 里面关于fs reddir的部分。

这一次有如神助，莫名奇妙地就读懂了开头。
继续读，虽然还是不太清楚，但对throw 有理解了，类似是return。
如果throw err, 函数就停止了。

但接下来再读就又不懂了，对url，buffer之类的，感觉超出了理解能力。
放弃，还是先把作业搞定吧。

跟着老师的步子走，得到了文件夹的名字。
之后遇见了2个难题。
1. 如何筛选出.json文件,搞了好久。
一开始不清楚fs.reddirSync返回的outContent内容是数组还是一串字符串，就打印了outContent
发现是数组。
就用for 函数进行outContent每个元素的检查。
百度了如何检查字符串里面，是否包含有某个字符串，是用indexOf(这个函数区分大小写)，就使用了。
这里有一个大乌龙。
我百度了好久，都说indexOf是可以检查字符串里面是否有包含一个指定的字符串。
但我用的时候，一直没有检查出来，
接下来更新outContent内容时，一直包含有不是.json的内容，几乎浪费了2小时。
后来，在关键代码的每一行打入了console.log(1),console.log(2)进行检查……
然后发现，那个22行的if函数，一直没有执行，然而虽然没有执行，但也没有报错。
最后，发现居然是"json"写错了，我写成了"jason"……
哭……(⊙﹏⊙)b。

改了之后，顺畅好多。
之后轻松搞完了。

2. 搞完后，发现txt的内容都是没有分行的。
后来看同学的作业，发现有同学是能分行的。
我也希望做成那样的，然后就抄袭了一下，但发现我的搞不成。ㄒoㄒ。
之后我又运行了一下同学们的文件，发现在我的win7的环境下，他们生成的txt文件也是不行的。
好吧，百度……
百度的结果是只要在字符串后面加上'\n'或'\r'或'^p'就能进行分行。
但我试了之后，都不行。
期间，也百度如何给字符串加一些内容的，就是直接+ 就成了。
虽然一开始我百度的是用.join()函数来进行，不过一直报错，后来看了liuliyuan同学的作业，
发现她是通过“+”来进行的，就用了，成功！^^
不过依然不能在txt中分段。
就决定先放下去，有机会问下老师，如何进行分段。
不过为了美观，我在每个元素的前后，都加了一个双括号。
打印了之后，还是很美观的。

超有成就感。
做完之后，就迫不及待地噼里啪啦，打了很多字。
之后努力读懂api文档。

*/